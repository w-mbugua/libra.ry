# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Author {
  books: [Book!]!
  id: Float!
  name: String!
}

type Book {
  author: Author!
  id: Float!
  loans: [Loan!]!
  owner: Member!
  reservations: [Reservation!]!
  tags: [Tag!]!
  title: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type FieldError {
  field: String!
  message: String!
}

type Loan {
  book: Book!
  borrower: Member!
  createdAt: DateTime!
  id: Float!
  returnDate: DateTime!
  updatedAt: DateTime!
}

input LoginInput {
  email: String
  password: String!
  username: String
}

type Member {
  books: [Book!]!
  email: String!
  id: Float!
  phoneNumber: String!
  username: String!
}

type MemberResponse {
  error: [FieldError!]
  member: Member
}

type Mutation {
  addAuthor(name: String!): Author!
  addBook(newBookData: NewBookInput!): Book!
  changePassword(newPassword: String!, token: String!): Member!
  deleteBook(id: Float!): Int!
  forgotPassword(email: String!): Boolean!
  login(loginInput: LoginInput!): MemberResponse!
  register(newMemberData: NewMemberInput!): MemberResponse!
  updateBook(newTitle: String, title: String): Book!
}

input NewBookInput {
  author: String!
  tag: String!
  title: String!
}

input NewMemberInput {
  email: String!
  password: String!
  phoneNumber: String!
  username: String!
}

type Query {
  currentUser: Member!
  getAuthors: [Author!]!
  getBookById(id: Float!): Book!
  getBooks: [Book!]!
  getTags: [Author!]!
}

type Reservation {
  book: Book!
  createdAt: DateTime!
  id: Float!
  reserver: Member!
  status: String!
  updatedAt: DateTime!
}

type Tag {
  books: [Book!]!
  id: Float!
  name: String!
}